<?xml version="1.0"?>
<ruleset name="Laravel Standards">

    <description>The Laravel Coding Standards</description>

    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.Debug.ClosureLinter"/>
    <rule ref="Generic.Debug.JSHint"/>
    <rule ref="Generic.Debug.CSSLint"/>
    <rule ref="Generic.Formatting.NoSpaceAfterCast"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="150"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="50"/>
            <property name="absoluteComplexity" value="100"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="10"/>
            <property name="absoluteNestingLevel" value="30"/>
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic">
        <exclude-pattern>*.php</exclude-pattern>
        <exclude name="Generic.Strings.UnnecessaryStringConcat.Found)"/>
    </rule>
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="true"/>
        </properties>
    </rule>


    <rule ref="MySource.PHP.EvalObjectFactory"/>
    <rule ref="MySource.PHP.GetRequestData"/>
    <rule ref="MySource.PHP.AjaxNullComparison"/>

<!--    <rule ref="PHPUnitStandard.Testing.AllowedFunctionOverride"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.ClassName"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.ExtraneousClass"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.FileNameSuffix"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.NoOutputFunctions"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.NoOutputStatements"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.ProvenTestCase"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.TestOrProviderIsPublic"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.UnusedProvider"/>-->
<!--    <rule ref="PHPUnitStandard.Testing.ValidFunctionName"/>-->

    <rule ref="PSR1.Classes.ClassDeclaration"/>
    <rule ref="PSR1.Files.SideEffects"/>
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>database/*.php</exclude-pattern>
    </rule>

    <rule ref="PSR2.Classes.ClassDeclaration"/>
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
    <rule ref="PSR2.Files.EndFileNewline"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>

    <rule ref="Zend.Files.ClosingTag"/>

    <rule ref="Squiz">
        <exclude-pattern>*.php</exclude-pattern>
        <exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace"/>
    </rule>


    <file>src</file>
    <file>src/Facades</file>
    <file>src/functions</file>
    <file>src/Providers</file>

    <exclude-pattern>*/cache/*</exclude-pattern>
    <exclude-pattern>*/*.xml</exclude-pattern>
    <exclude-pattern>*/*.blade.php</exclude-pattern>
    <exclude-pattern>*/autoload.php</exclude-pattern>
    <exclude-pattern>*/storage/*</exclude-pattern>
    <exclude-pattern>*/docs/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/public/index.php</exclude-pattern>
    <exclude-pattern>*/*.blade.php</exclude-pattern>
    <exclude-pattern>*_ide_helper.php*</exclude-pattern>
    <exclude-pattern>*ide-helper.php*</exclude-pattern>

    <arg name="colors"/>
    <arg value="spvnl"/>
    <arg value="p"/>
    <ini name="memory_limit" value="128M"/>

    <rule ref="PSR1"/>
    <rule ref="PSR2"/>
    <rule ref="PSR12"/>

</ruleset>
